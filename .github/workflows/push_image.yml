name: push_image

on:
  push:
    branches:
      - master

jobs:
  push_image:
    env:
      IMAGE_NAME: printout
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}-${{ github.sha }}
            ${{ github.ref }}
            refs/head/master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: create tag
        run: |
          SHA=${{ github.sha }}
          TAG=$(TZ=UTC-9 date '+%Y%m')-${SHA:0:7}
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            LATEST=latest
            echo "TAGS=$TAG,$LATEST" >> $GITHUB_ENV
          else
            echo "TAGS=$TAG" >> $GITHUB_ENV
          fi
          echo TAG $TAG

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.BUILD_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
            
  convert_via_pandoc:
    needs: push_image
    runs-on: ubuntu-18.04
    steps:
      - name: Build File markdown to pdf.
        uses: actions/checkout@v2
        run: |
          make setup
          make CTN2=ghcr.io/i13302/printout test
      - name: Upload file pdf.
        uses: actions/upload-artifact@master
        with:
          name: output
          path: work/pdf/01_Doc.pdf work/pdf/01_Doc_en.pdf
